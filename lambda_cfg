A -> l V . A    (0)
A -> V B        (1)
A -> ( A ) C    (2)
B -> l V . A    (0)
B -> s A        (3)
B -> ( A ) C    (2)
B -> Null       (4)
C -> l V . A    (0)
C -> V B        (1)
C -> ( A ) C    (2)
C -> Null       (4)
V -> v W        (5)
W -> v W        (5)
W -> Null       (6)

A = Expression
B = Following Value
C = Following Brackets
V = Head of Value
W = Tail of Value

l = Lambda Characters (Î» | \)
v = Variable Characters ([a-zA-Z0-9_'`"])
s = Whitespace


LL(1) Parse Table:

    v       (       s       l       $       )       .
A   (1)     (2)     -       (0)     -       -       -
B   -       (2)     (3)     (0)     (4)     (4)     -
C   (1)     (2)     -       (0)     (4)     (4)     -
V   (5)     -       -       -       -       -       -
W   (5)     (6)     (6)     (6)     (6)     (6)     (6)
